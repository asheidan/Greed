--- 
:reek: 
  :matches: 
  - :file_path: lib/players/dummy_player.rb
    :code_smells: []

  - :file_path: lib/rules.rb
    :code_smells: []

  - :file_path: lib/rules/dummy_rule.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: Rules::DummyRule
  - :file_path: lib/rules/ones_and_fives_rule.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: Rules::OnesAndFivesRule
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: Rules::OnesAndFivesRule#apply
    - :type: LongMethod
      :message: has approx 7 statements
      :method: Rules::OnesAndFivesRule#apply
    - :type: LowCohesion
      :message: refers to die more than self
      :method: Rules::OnesAndFivesRule#apply
    - :type: LowCohesion
      :message: refers to points more than self
      :method: Rules::OnesAndFivesRule#apply
:roodi: 
  :total: 
  - Found 0 errors.
  :problems: []

:saikuro: 
  :methods: 
  - :lines: 14
    :complexity: 4
    :name: Rules::OnesAndFivesRule#apply
  - :lines: 9
    :complexity: 3
    :name: Rules#self.apply_rules
  - :lines: 1
    :complexity: 1
    :name: Players::DummyPlayer#limits
  - :lines: 2
    :complexity: 1
    :name: Rules::DummyRule#apply
  - :lines: 2
    :complexity: 1
    :name: Players::DummyPlayer#roll
  - :lines: 1
    :complexity: 1
    :name: Players::DummyPlayer#status_update
  - :lines: 1
    :complexity: 1
    :name: Players::DummyPlayer#update_scoreboard
  :classes: 
  - :defs: 
    - :lines: 14
      :complexity: 4
      :name: Rules::OnesAndFivesRule#apply
    :lines: 16
    :complexity: 4
    :name: Rules::OnesAndFivesRule
  - :defs: 
    - :lines: 1
      :complexity: 1
      :name: Players::DummyPlayer#update_scoreboard
    - :lines: 1
      :complexity: 1
      :name: Players::DummyPlayer#status_update
    - :lines: 2
      :complexity: 1
      :name: Players::DummyPlayer#roll
    - :lines: 1
      :complexity: 1
      :name: Players::DummyPlayer#limits
    :lines: 21
    :complexity: 4
    :name: Players::DummyPlayer
  - :defs: 
    - :lines: 9
      :complexity: 3
      :name: Rules#self.apply_rules
    :lines: 12
    :complexity: 3
    :name: Rules
  - :defs: 
    - :lines: 2
      :complexity: 1
      :name: Rules::DummyRule#apply
    :lines: 9
    :complexity: 1
    :name: Rules::DummyRule
  - :lines: 2
    :complexity: 0
    :name: Rules
  - :lines: 2
    :complexity: 0
    :name: Rules
  - :lines: 4
    :complexity: 0
    :name: Players
  :files: 
  - :classes: 
    - :methods: []

      :lines: 4
      :complexity: 0
      :class_name: Players
    - :methods: 
      - :lines: 1
        :complexity: 1
        :name: Players::DummyPlayer#limits
      - :lines: 2
        :complexity: 1
        :name: Players::DummyPlayer#roll
      - :lines: 1
        :complexity: 1
        :name: Players::DummyPlayer#status_update
      - :lines: 1
        :complexity: 1
        :name: Players::DummyPlayer#update_scoreboard
      :lines: 21
      :complexity: 4
      :class_name: Players::DummyPlayer
    :filename: dummy_player.rb
  - :classes: 
    - :methods: []

      :lines: 2
      :complexity: 0
      :class_name: Rules
    - :methods: 
      - :lines: 14
        :complexity: 4
        :name: Rules::OnesAndFivesRule#apply
      :lines: 16
      :complexity: 4
      :class_name: Rules::OnesAndFivesRule
    :filename: ones_and_fives_rule.rb
  - :classes: 
    - :methods: 
      - :lines: 9
        :complexity: 3
        :name: Rules#self.apply_rules
      :lines: 12
      :complexity: 3
      :class_name: Rules
    :filename: rules.rb
  - :classes: 
    - :methods: []

      :lines: 2
      :complexity: 0
      :class_name: Rules
    - :methods: 
      - :lines: 2
        :complexity: 1
        :name: Rules::DummyRule#apply
      :lines: 9
      :complexity: 1
      :class_name: Rules::DummyRule
    :filename: dummy_rule.rb
:churn: 
  :method_churn: []

  :changed_classes: []

  :changes: 
  - :file_path: doc/plan/projectplan.tex
    :times_changed: 20
  - :file_path: src/test/rules/test_ones_and_fives_rule.rb
    :times_changed: 3
  - :file_path: src/lib/players/dummy_player.rb
    :times_changed: 3
  :changed_methods: []

  :class_churn: []

  :changed_files: 
  - src/lib/players/dummy_player.rb
  - src/test/players/is_a_player.rb
:rcov: 
  lib/players/dummy_player.rb: 
    :lines: 
    - :content: "   module Players"
      :was_run: true
    - :content: "     # Inherit this class and override the methods you want/need/like"
      :was_run: true
    - :content: "     class DummyPlayer"
      :was_run: true
    - :content: "       # Called by server with information about all players scores"
      :was_run: true
    - :content: "       def update_scoreboard(scores = {})"
      :was_run: true
    - :content: "       end"
      :was_run: true
    - :content: "       # Called by server with information about current turn"
      :was_run: true
    - :content: "       def status_update(name, dice, saved=[])"
      :was_run: true
    - :content: "       end"
      :was_run: true
    - :content: "       # Called by server when it's this players turn."
      :was_run: true
    - :content: "       # The method returns an Array with the dice the player want's to throw"
      :was_run: true
    - :content: "       # again and an empty Array when it's time to save."
      :was_run: true
    - :content: "       def roll(dice)"
      :was_run: true
    - :content: "         dice"
      :was_run: true
    - :content: "       end"
      :was_run: true
    - :content: "       # Called when a joining a game. "
      :was_run: true
    - :content: "       # Limits might look like this {:limit => 10000,:bust => 300}"
      :was_run: true
    - :content: "       def limits(limits)"
      :was_run: true
    - :content: "       end"
      :was_run: true
    - :content: "     end"
      :was_run: true
    - :content: "   end"
      :was_run: true
    :percent_run: 100
  lib/rules/dummy_rule.rb: 
    :lines: 
    - :content: "   module Rules"
      :was_run: true
    - :content: "     class DummyRule"
      :was_run: true
    - :content: "       # All Rule-classes implements this method. The argument is a set of dice"
      :was_run: true
    - :content: "       # and the return value should be a tuple where the first value is the"
      :was_run: true
    - :content: "       # maximum points for this rule and the given dice and the second value"
      :was_run: true
    - :content: "       # is an Array of the dice not used"
      :was_run: true
    - :content: "       def apply(dice)"
      :was_run: true
    - :content: "         return 0,[]"
      :was_run: true
    - :content: "       end"
      :was_run: true
    - :content: "     end"
      :was_run: true
    - :content: "   end"
      :was_run: true
    :percent_run: 100
  lib/rules/ones_and_fives_rule.rb: 
    :lines: 
    - :content: "   module Rules"
      :was_run: true
    - :content: "     class OnesAndFivesRule"
      :was_run: true
    - :content: "       def apply(dice)"
      :was_run: true
    - :content: "         points = 0"
      :was_run: true
    - :content: "         rethrow = dice.select do |die|"
      :was_run: true
    - :content: "           if die == 1"
      :was_run: true
    - :content: "             points += 100"
      :was_run: true
    - :content: "             false"
      :was_run: true
    - :content: "           elsif die == 5"
      :was_run: true
    - :content: "             points += 50"
      :was_run: true
    - :content: "             false"
      :was_run: true
    - :content: "           else"
      :was_run: true
    - :content: "             true"
      :was_run: true
    - :content: "           end"
      :was_run: true
    - :content: "         end"
      :was_run: true
    - :content: "         return points,rethrow"
      :was_run: true
    - :content: "       end"
      :was_run: true
    - :content: "     end"
      :was_run: true
    - :content: "   end"
      :was_run: true
    :percent_run: 100
  :global_percent_run: 90.8
  lib/rules.rb: 
    :lines: 
    - :content: "   require 'rules/dummy_rule'"
      :was_run: true
    - :content: "   module Rules"
      :was_run: true
    - :content: "     @rules = [DummyRule.new]"
      :was_run: true
    - :content: "     def self.apply_rules(dice)"
      :was_run: true
    - :content: "       @rules.collect do |rule|"
      :was_run: true
    - :content: "         points, dice = rule.apply(dice)"
      :was_run: true
    - :content: "         if dice.empty?"
      :was_run: true
    - :content: "           points"
      :was_run: true
    - :content: "         else"
      :was_run: false
    - :content: "           points + apply_rules(dice)"
      :was_run: false
    - :content: "         end"
      :was_run: false
    - :content: "       end.max"
      :was_run: false
    - :content: "     end"
      :was_run: false
    - :content: "   end"
      :was_run: false
    :percent_run: 57
:flog: 
  :total: 28.5
  :pages: 
  - :path: /lib/rules.rb
    :highest_score: 12.5
    :scanned_methods: 
    - :score: 12.5
      :name: Rules#apply_rules
      :operators: 
      - :score: 6.7
        :operator: assignment
      - :score: 3.2
        :operator: branch
      - :score: 2.0
        :operator: apply_rules
      - :score: 1.8
        :operator: +
      - :score: 1.7
        :operator: empty?
      - :score: 1.7
        :operator: apply
      - :score: 1.5
        :operator: collect
      - :score: 1.3
        :operator: max
    - :score: 1.7
      :name: Rules#none
      :operators: 
      - :score: 1.2
        :operator: assignment
      - :score: 1.2
        :operator: new
    - :score: 1.1
      :name: main#none
      :operators: 
      - :score: 1.1
        :operator: require
    :score: 15.3
    :average_score: 5.1
  - :path: /lib/rules/ones_and_fives_rule.rb
    :highest_score: 10.8
    :scanned_methods: 
    - :score: 10.8
      :name: OnesAndFivesRule#apply
      :operators: 
      - :score: 6.3
        :operator: assignment
      - :score: 3.6
        :operator: branch
      - :score: 2.9
        :operator: +
      - :score: 2.5
        :operator: ==
      - :score: 1.6
        :operator: lit_fixnum
      - :score: 1.1
        :operator: select
    :score: 10.8
    :average_score: 10.8
  - :path: /lib/players/dummy_player.rb
    :highest_score: 1.2
    :scanned_methods: 
    - :score: 1.2
      :name: DummyPlayer#status_update
      :operators: 
      - :score: 1.2
        :operator: assignment
    - :score: 1.2
      :name: DummyPlayer#update_scoreboard
      :operators: 
      - :score: 1.2
        :operator: assignment
    :score: 2.4
    :average_score: 1.2
  :average: 4.8
:flay: 
  :matches: []

  :total_score: "0"
